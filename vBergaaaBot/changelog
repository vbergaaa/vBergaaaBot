-------------------------------------------------------

Version: 2.0.3

Release Date: 8/9/2019
Author: Ryan Vandenberg

Description:
Remodel of scout task and enabled overlord scouting

Remodel of creep task to spread creep more evenly

Fixed an issue causing buildings to build in the mineral line

-------------------------------------------------------

Version: 2.0.2

Release Date: 6/9/2019
Author: Ryan Vandenberg

Description:
Modification of the distribute workers function to stop them overmining from a base.

Modification of GetAvailableAgent function to exclude units in construction

Modification of GetGasLocation function to aviod geysers that have an agent ontop of them

Added optional functionality to automaticallly start a new game when a game ends

Updated Map Pool to test on maps from current map pool.

-------------------------------------------------------

Version: 2.0.1

Release Date: 18/8/2019
Author: Ryan Vandenberg

Description:
Added changelog

Fixed bug that resulted in setting realtime to false to break the bot.

Fixed a bug that caused some macro tasks (particularly upgrades) to be skipped.

Fixed a bug that caused getting vision of a pixel to return an incorrect value, which prevents the
army from stopping in the middle of the map when no units are in sight.

-------------------------------------------------------

Version: 2.0.0

Release Date: 17/8/2019
Author: Ryan Vandenberg

Description:

Restructure of entire architecture.

Builds now contain a collection of Microcontrollers. Microcontrollers read the game state
and contain logic to create Tasks. Microcontrollers are managed by the bots MicroManager class. 

Tasks are requests that the bot wants to make to the game state. Tasks check if a request is
possible by reading the gamestate, then if possible they execute and send a request to the client.
Tasks are managed and executed by the TaskManager class.

The Agent class has replace the Unit class. An agent contains a sc2api.unit as a property and 
methods to allow ease of assigning orders.

The StateManager class was created to read the gamestate and record what units are in existance.
It allows for much faster calls to get unit counts/agents then the obvs.obvs.rawdata object.

The MapAnalyser class replaced the MapInformation class, and contains most of the same methods 
with added functionality.

The EnemyStrategyManager class has been created. it has limited functionality but will be contain
several methods to analyse the enemy and react to it.

-------------------------------------------------------
